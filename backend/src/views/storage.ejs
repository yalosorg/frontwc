<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('partials/head') %>
  </head>
  <body>
    <%- include('partials/header') %>

    <main>
      <div class="top-buttons">
        <button target="_blank" class="download-all-btn">Скачать всё</button>
        <button target="_blank" class="download-new-btn">Скачать новое</button>
      </div>

      <div class="storage-list"></div>
    </main>
    <script>
      fetch(`${loc.protocol}//${loc.hostname}:${loc.port}/api/user/me`, {
        method: "get",
        headers: {
          Authorization: token,
        },
      })
        .then((res) => {
          if (res.ok) return res.json();
          throw new Error("Unauthorized");
        })
        .then((data) => {
          const subscribed = data.user.subscription > new Date().getUTCDate();
          if (!subscribed) loc.replace("/subscription");
        });

      async function getFiles() {
        let sharedFiles = await fetch(
          `${loc.protocol}//${loc.hostname}:${loc.port}/api/file/sharedresources`,
          {
            method: "get",
            headers: {
              Authorization: token,
            },
          }
        ).then((res) => res.json());

        let uniqueFiles = await fetch(
          `${loc.protocol}//${loc.hostname}:${loc.port}/api/file/getmyresources`,
          {
            method: "get",
            headers: {
              Authorization: token,
            },
          }
        ).then((res) => res.json());

        const files = [...sharedFiles, ...uniqueFiles];
        console.log(files);

        const storageListDiv = document.querySelector(".storage-list");

        files.forEach((file, i) => {
          console.log(file);

          let storageItem = document.createElement("a");
          storageItem.className = "storage-file";
          storageListDiv.appendChild(storageItem);
          let img = document.createElement("img");
          img.src = "/img/file_icon.png";
          storageItem.appendChild(img);
          let fileInfo = document.createElement("div");
          fileInfo.className = "file-info";
          let idDisplayh4 = document.createElement("h4");
          idDisplayh4.innerText = "Id: " + file._id;
          let sizeDisplayh4 = document.createElement("h4");
          sizeDisplayh4.innerText =
            "Size: " + (file.size / 1000000).toFixed(3) + "mb";
          fileInfo.appendChild(idDisplayh4);
          fileInfo.appendChild(sizeDisplayh4);
          storageItem.appendChild(fileInfo);
          storageItem.addEventListener("click", (e) => {
            fetch(
              `${loc.protocol}//${loc.hostname}:${loc.port}/api/file/download/`,
              {
                method: "post",
                headers: {
                  "Content-Type": "application/json",
                  Authorization: token,
                },
                body: JSON.stringify({
                  file_name: file.name,
                }),
              }
            )
              .then((res) => res.blob())
              .then((blob) => {
                loc.replace(window.URL.createObjectURL(blob));
              });
          });
        });
      }

      getFiles();

      document
        .querySelector(".download-all-btn")
        .addEventListener("click", () => {
          fetch(
            `${loc.protocol}//${loc.hostname}:${loc.port}/api/file/download-all`,
            {
              method: "get",
              headers: {
                Authorization: token,
              },
            }
          )
            .then((res) => res.blob())
            .then((blob) => {
              loc.replace(window.URL.createObjectURL(blob));
            });
        });

      document
        .querySelector(".download-new-btn")
        .addEventListener("click", () => {
          fetch(
            `${loc.protocol}//${loc.hostname}:${loc.port}/api/file/download-new`,
            {
              method: "get",
              headers: {
                Authorization: token,
              },
            }
          )
            .then((res) => res.blob())
            .then((blob) => {
              loc.replace(window.URL.createObjectURL(blob));
            });
        });
    </script>
  </body>
</html>
